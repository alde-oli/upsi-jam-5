name: "Discord Notifications"

on:
  workflow_call:
    inputs:
      type:
        description: 'Type of notification (build, test, deploy, pr, release)'
        required: true
        type: string
      status:
        description: 'Status of the job (success, failure, cancelled)'
        required: true
        type: string
      branch:
        description: 'Branch name'
        required: false
        type: string
        default: ''
      commit:
        description: 'Commit SHA'
        required: false
        type: string
        default: ''
      actor:
        description: 'GitHub actor'
        required: false
        type: string
        default: ''
      pr_number:
        description: 'Pull request number'
        required: false
        type: string
        default: ''
      pr_title:
        description: 'Pull request title'
        required: false
        type: string
        default: ''
      run_id:
        description: 'Workflow run ID'
        required: true
        type: string
      additional_info:
        description: 'Additional information to include in notification'
        required: false
        type: string
        default: ''
      discord_webhook:
        description: 'Discord webhook URL'
        required: true
        type: string
      itch_user:
        description: 'Itch.io username'
        required: false
        type: string
        default: ''
      itch_game:
        description: 'Itch.io game name'
        required: false
        type: string
        default: ''

jobs:
  notify:
    name: Send Discord Notification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
        
      - name: Prepare Build Notification
        if: inputs.type == 'build'
        id: build_notification
        run: |
          if [[ "${{ inputs.status }}" == "success" ]]; then
            echo "title=✅ Build Successful" >> $GITHUB_OUTPUT
            echo "color=0x44FF44" >> $GITHUB_OUTPUT
            echo "description=Build completed successfully on branch ${{ inputs.branch }}.\n\nCommit: ${{ inputs.commit }}\nAuthor: ${{ inputs.actor }}" >> $GITHUB_OUTPUT
          else
            echo "title=❌ Build Failed" >> $GITHUB_OUTPUT
            echo "color=0xFF0000" >> $GITHUB_OUTPUT
            echo "description=Build failed on branch ${{ inputs.branch }}.\n\nCommit: ${{ inputs.commit }}\nAuthor: ${{ inputs.actor }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Prepare Test Notification
        if: inputs.type == 'test'
        id: test_notification
        run: |
          if [[ "${{ inputs.status }}" == "success" ]]; then
            echo "title=✅ Tests Passed" >> $GITHUB_OUTPUT
            echo "color=0x44FF44" >> $GITHUB_OUTPUT
            echo "description=All tests passed on branch ${{ inputs.branch }}.\n\nCommit: ${{ inputs.commit }}\nAuthor: ${{ inputs.actor }}" >> $GITHUB_OUTPUT
          else
            echo "title=❌ Tests Failed" >> $GITHUB_OUTPUT
            echo "color=0xFF0000" >> $GITHUB_OUTPUT
            echo "description=Tests failed on branch ${{ inputs.branch }}.\n\nCommit: ${{ inputs.commit }}\nAuthor: ${{ inputs.actor }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Prepare Deploy Notification
        if: inputs.type == 'deploy'
        id: deploy_notification
        run: |
          if [[ "${{ inputs.status }}" == "success" ]]; then
            echo "title=🚀 Deployment Successful" >> $GITHUB_OUTPUT
            echo "color=0x44FF44" >> $GITHUB_OUTPUT
            echo "description=Successfully deployed to itch.io!\n\nGame: ${{ inputs.itch_game }}\nUser: ${{ inputs.itch_user }}\nCommit: ${{ inputs.commit }}\nBranch: ${{ inputs.branch }}\n\n[Play Online](https://${{ inputs.itch_user }}.itch.io/${{ inputs.itch_game }})" >> $GITHUB_OUTPUT
            echo "url=https://${{ inputs.itch_user }}.itch.io/${{ inputs.itch_game }}" >> $GITHUB_OUTPUT
          else
            echo "title=❌ Deployment Failed" >> $GITHUB_OUTPUT
            echo "color=0xFF0000" >> $GITHUB_OUTPUT
            echo "description=Deployment to itch.io failed.\n\nBranch: ${{ inputs.branch }}\nCommit: ${{ inputs.commit }}\nAuthor: ${{ inputs.actor }}" >> $GITHUB_OUTPUT
            echo "url=" >> $GITHUB_OUTPUT
          fi

      - name: Prepare PR Notification
        if: inputs.type == 'pr'
        id: pr_notification
        run: |
          if [[ "${{ inputs.status }}" == "success" ]]; then
            echo "title=🔍 PR Preview Deployed" >> $GITHUB_OUTPUT
            echo "color=0xFFAA00" >> $GITHUB_OUTPUT
            echo "description=PR #${{ inputs.pr_number }}: \"${{ inputs.pr_title }}\"\n\nCreated by: ${{ inputs.actor }}\nBranch: ${{ inputs.branch }}\n\n[Play Preview](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/${{ inputs.pr_number }}/)" >> $GITHUB_OUTPUT
            echo "url=https://github.com/${{ github.repository }}/pull/${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.status }}" == "opened" ]]; then
            echo "title=📝 New Pull Request" >> $GITHUB_OUTPUT
            echo "color=0x0088FF" >> $GITHUB_OUTPUT
            echo "description=PR #${{ inputs.pr_number }}: \"${{ inputs.pr_title }}\"\n\nCreated by: ${{ inputs.actor }}\nBranch: ${{ inputs.branch }}" >> $GITHUB_OUTPUT
            echo "url=https://github.com/${{ github.repository }}/pull/${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.status }}" == "merged" ]]; then
            echo "title=🎉 Pull Request Merged" >> $GITHUB_OUTPUT
            echo "color=0x8800FF" >> $GITHUB_OUTPUT
            echo "description=PR #${{ inputs.pr_number }}: \"${{ inputs.pr_title }}\"\n\nMerged by: ${{ inputs.actor }}\nBranch: ${{ inputs.branch }}" >> $GITHUB_OUTPUT
            echo "url=https://github.com/${{ github.repository }}/pull/${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "title=❌ PR Preview Failed" >> $GITHUB_OUTPUT
            echo "color=0xFF0000" >> $GITHUB_OUTPUT
            echo "description=PR preview deployment failed for PR #${{ inputs.pr_number }}\n\"${{ inputs.pr_title }}\"\n\nCreated by: ${{ inputs.actor }}" >> $GITHUB_OUTPUT
            echo "url=https://github.com/${{ github.repository }}/pull/${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Release Notification
        if: inputs.type == 'release'
        id: release_notification
        run: |
          RELEASE_TAG="${{ inputs.additional_info }}"
          echo "title=🎮 New Release: ${RELEASE_TAG}" >> $GITHUB_OUTPUT
          echo "color=0x00FFAA" >> $GITHUB_OUTPUT
          echo "description=A new release has been published!\n\nTag: ${RELEASE_TAG}\nCreated by: ${{ inputs.actor }}\n\n[View Release](https://github.com/${{ github.repository }}/releases/tag/${RELEASE_TAG})" >> $GITHUB_OUTPUT
          echo "url=https://github.com/${{ github.repository }}/releases/tag/${RELEASE_TAG}" >> $GITHUB_OUTPUT

      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ inputs.discord_webhook }}
          title: ${{ steps.build_notification.outputs.title || steps.test_notification.outputs.title || steps.deploy_notification.outputs.title || steps.pr_notification.outputs.title || steps.release_notification.outputs.title }}
          description: ${{ steps.build_notification.outputs.description || steps.test_notification.outputs.description || steps.deploy_notification.outputs.description || steps.pr_notification.outputs.description || steps.release_notification.outputs.description }}${{ inputs.additional_info != '' && format('\n\n{0}', inputs.additional_info) || '' }}
          color: ${{ steps.build_notification.outputs.color || steps.test_notification.outputs.color || steps.deploy_notification.outputs.color || steps.pr_notification.outputs.color || steps.release_notification.outputs.color }}
          url: ${{ steps.deploy_notification.outputs.url || steps.pr_notification.outputs.url || steps.release_notification.outputs.url || format('{0}/{1}/actions/runs/{2}', github.server_url, github.repository, inputs.run_id) }}