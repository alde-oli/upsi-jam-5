name: "Build Game"

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:

jobs:
  check_quality_status:
    name: Check Quality Status
    runs-on: ubuntu-latest
    steps:
      - name: Check latest quality workflow run
        id: quality_check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.payload.ref ? context.payload.ref.replace('refs/heads/', '') : context.payload.workflow_run ? context.payload.workflow_run.head_branch : '';
            console.log(`Checking quality for branch: ${branch}`);
            
            const workflows = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'quality.yml',
              branch: branch,
              status: 'completed',
              per_page: 1
            });
            
            if (workflows.data.workflow_runs.length === 0) {
              core.setFailed('No quality workflow runs found for this branch');
              return;
            }
            
            const latestRun = workflows.data.workflow_runs[0];
            console.log(`Latest quality run conclusion: ${latestRun.conclusion}`);
            
            if (latestRun.conclusion !== 'success') {
              core.setFailed(`Latest quality check did not succeed. Status: ${latestRun.conclusion}`);
              return;
            }
            
            console.log('Quality check passed!');

  export_game:
    name: Export Game
    needs: [check_quality_status]
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Setup directories
        run: mkdir -p ~/.local/share/godot/export_templates ~/.config/godot/
          
      - name: Install dependencies
        run: apt-get update && apt-get install -y rsync wget unzip

      - name: Cache Godot export templates
        id: cache-templates
        uses: actions/cache@v3
        with:
          path: ~/.local/share/godot/export_templates
          key: ${{ runner.os }}-godot-templates-4.3

      - name: Download and install export templates
        if: steps.cache-templates.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/godotengine/godot/releases/download/4.3-stable/Godot_v4.3-stable_export_templates.tpz -O templates.tpz
          unzip -q templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/4.3.stable
          mv templates/* ~/.local/share/godot/export_templates/4.3.stable/
          rm -rf templates templates.tpz

      - name: Web Build
        run: |
          mkdir -p build/web
          godot --headless --export-release "Web" ./build/web/index.html

      - name: Upload Web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          retention-days: 7

      - name: Call Discord Notifier
        uses: ./.github/workflows/discord-notifier.yml@main
        with:
          type: 'build'
          status: ${{ job.status }}
          branch: ${{ github.ref_name }}
          commit: ${{ github.sha }}
          actor: ${{ github.actor }}
          run_id: ${{ github.run_id }}
          discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}

  deploy_preview:
    name: Deploy Preview
    needs: export_game
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download Web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Deploy to GitHub Pages for PR review
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
          destination_dir: pr-preview/${{ github.event.pull_request.number }}
          keep_files: true

      - name: Comment on PR with preview link
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const preview_url = `https://${owner}.github.io/${repo}/pr-preview/${issue_number}/`;
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: owner,
              repo: repo,
              body: `✨ PR preview ready! ✨\n\nYou can test this PR at: [${preview_url}](${preview_url})`
            });

      - name: Call Discord Notifier
        uses: ./.github/workflows/discord-notifier.yml@main
        with:
          type: 'pr'
          status: ${{ job.status }}
          branch: ${{ github.head_ref }}
          actor: ${{ github.event.pull_request.user.login }}
          pr_number: ${{ github.event.pull_request.number }}
          pr_title: ${{ github.event.pull_request.title }}
          run_id: ${{ github.run_id }}
          discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}